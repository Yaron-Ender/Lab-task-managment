COMPONENT SUMMERY

/*/*/*/*/*/<Database />/*/*/*/*/*
/*/*the logic Dtabase has been changed 06.12.22/*/*
**- this mark means that that this component is nested in other component
-nav bar open
two clickable elemnt:
*-new substance - *-Select with all the substances- 
<Database />
funcionality:
  -get the substances's id
  -store then in substanceIdOptions state that pass to teh optins prop in the Select comp
  -every option of the Select is store in the useSearchParams object
  -pass the useSearchParams result into Substace Comp

 **     <CreateSubstance closeCreateSubstanceComp={closeCreateSubstanceComp} />
        (closeCreateSubstanceComp -  function that get called in createSustance component and turn openCreateSub state to false in order to close the createSubstabce comp. after push the "save monograph" button)
--------------------------------------

------------------------------------------------------
<Substance /> - by useParams the routers has changed to the substance id and pass the id to 
**  <MonographList document={document} id={id} />
----------------------------------------
<MonographList /> -the document that has been passed is the document object from firestore, the id that passed id the suncstance name, base upon them we build the UI of the component and the logic component
logic:
devide into 4 sections
-by the useEffect we build two objects:one for the handle with the monograph name and the second object to handle the rest of the fields

-openCloseInput - this function assosiate only with details monograph part - it open the input by click the edit button and remove the input when the form is submit

-handleChangeMonoField - this function get called when there change in the input- it's take the value of the input and store it in changeMonoName state for monographName input and handleChangeMonoField state for the rest of the input feilds, then it update the dispatch reducer that has a rule of gurder and barrier in the handleSubmitMonographName function

-handleSubmitMonographName -- according the dispatch filter the function knows witch state to send to firestore and update the substance collection

/*/*/* in this comp i have use data-fns laibary

/*/*/*/*/*<Assingnment />/*/*/*/*/*/*
** <MainSidebar />   ** < AddProject/>
                               |
                     ** <addProjMono />
                               |
                         **<AddTest />


** < AddProject/> - 
-build array of options based on substance collection (selectProject state)-only once when it get called- this is the starter point of all the funcionality that come later

- arrOfMonogrpaghsNames.current =[],evrey time the Select box changes, the project name passed to addProjectMono comp and from there handleTestFeild get called

-handleTestFeild get called from two seperated comp:addProjectMono and addTest

when it called from addProjectMono, it passed the monograsphes names 
then, the addProject comp add this monograph name to the object that already have a projectName as a property.

whenever a user change the fields the handleTestFields function get called from addTEsst comp and pass the information that has changed to addProject comp that complete to build the object 

the object store in firestore with anynomouse id



WORK FLOW THAT ASSOSIATE WITH ASSIGNMET COLLECTION

- addDocumentWithAnonymousID(buildProjectObj.current)==> build the assignments collection (AddProject comp)
- update the assignments property in tne users collection with the assignment id addAssignmentToWorker(buildProjectObj.current, assignmentID);
 NOTE:





workersAssignments.jsx

  the reason i devided the logic into three seperate comp( WorkersMyAssignment -- responsible to display my Assigntments, and workersSameTechAssignments-- assignments with the same thech WorkersOtherAssignmet-- responsible for all the other assignments.) is because My assignment comes from the users collection as opposed to other assignments that comes from assignments collection - the reason for that is because we don't want to allow all the users access to users collection

 









